{"operationName": "WritePost", "query": "mutation WritePost(\n    $title: String\n    $body: String\n    $tags: [String]\n    $is_markdown: Boolean\n    $is_temp: Boolean\n    $is_private: Boolean\n    $url_slug: String\n    $thumbnail: String\n    $meta: JSON\n    $series_id: ID\n    $token: String\n  ) {\n    writePost(\n      title: $title\n      body: $body\n      tags: $tags\n      is_markdown: $is_markdown\n      is_temp: $is_temp\n      is_private: $is_private\n      url_slug: $url_slug\n      thumbnail: $thumbnail\n      meta: $meta\n      series_id: $series_id\n      token: $token\n    ) {\n      id\n      user {\n        id\n        username\n      }\n      url_slug\n    }\n  }\n", "variables": {"body": "[\ubb38\uc81c \ub9c1\ud06c](https://www.acmicpc.net/problem/3003)\n\n### .rs\n\nTime: 4 ms, Memory: 13208 KB \n\n```rs\nuse std::io::stdin;\n\nfn main() {\n    let pieces = vec![1, 1, 2, 2, 2, 8];\n\n    let mut buf = String::new();\n    stdin().read_line(&mut buf).unwrap();\n\n    let ans = buf\n        .split_ascii_whitespace()\n        .map(|x| x.parse::<i8>().unwrap())\n        .enumerate()\n        .map(|(i, e)| (pieces[i] - e).to_string())\n        .collect::<Vec<_>>()\n        .join(\" \");\n\n    print!(\"{}\", ans);\n}\n\n```\n\n", "is_markdown": true, "is_private": true, "is_temp": false, "meta": {"short_description": "[\ubc31\uc900][Bronze V] \ud0b9, \ud038, \ub8e9, \ube44\uc20d, \ub098\uc774\ud2b8, \ud3f0 - 3003 Time: 4 ms, Memory: 13208 KB "}, "series_id": null, "tags": ["\uc54c\uace0\ub9ac\uc998 \ubb38\uc81c\ud480\uc774", "\ubc31\uc900"], "thumbnail": null, "title": "[\ubc31\uc900][Bronze V] \ud0b9, \ud038, \ub8e9, \ube44\uc20d, \ub098\uc774\ud2b8, \ud3f0 - 3003", "token": null, "url_slug": "\ubc31\uc900--Bronze-V--\ud0b9--\ud038--\ub8e9--\ube44\uc20d--\ub098\uc774\ud2b8--\ud3f0---3003"}}