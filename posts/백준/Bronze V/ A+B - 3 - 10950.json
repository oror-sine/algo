{"operationName": "WritePost", "query": "mutation WritePost(\n    $title: String\n    $body: String\n    $tags: [String]\n    $is_markdown: Boolean\n    $is_temp: Boolean\n    $is_private: Boolean\n    $url_slug: String\n    $thumbnail: String\n    $meta: JSON\n    $series_id: ID\n    $token: String\n  ) {\n    writePost(\n      title: $title\n      body: $body\n      tags: $tags\n      is_markdown: $is_markdown\n      is_temp: $is_temp\n      is_private: $is_private\n      url_slug: $url_slug\n      thumbnail: $thumbnail\n      meta: $meta\n      series_id: $series_id\n      token: $token\n    ) {\n      id\n      user {\n        id\n        username\n      }\n      url_slug\n    }\n  }\n", "variables": {"body": "[\ubb38\uc81c \ub9c1\ud06c](https://www.acmicpc.net/problem/10950)\n\n### .rs\n\nTime: 4 ms, Memory: 13204 KB \n\n```rs\nuse std::fmt::Write;\nuse std::io::{stdin, Read};\n\nfn main() {\n    let mut input = String::new();\n    stdin().read_to_string(&mut input).unwrap();\n\n    let mut input = input\n        .split_ascii_whitespace()\n        .map(|x| x.parse::<u8>().unwrap());\n\n    let t = input.next().unwrap();\n\n    let mut output = String::new();\n    for _ in 0..t {\n        let a = input.next().unwrap();\n        let b = input.next().unwrap();\n\n        writeln!(output, \"{}\", a + b).unwrap();\n    }\n\n    print!(\"{}\", output);\n}\n\n```\n\n", "is_markdown": true, "is_private": true, "is_temp": false, "meta": {"short_description": "[\ubc31\uc900][Bronze V] A+B - 3 - 10950 Time: 4 ms, Memory: 13204 KB "}, "series_id": null, "tags": ["\uc54c\uace0\ub9ac\uc998 \ubb38\uc81c\ud480\uc774", "\ubc31\uc900"], "thumbnail": null, "title": "[\ubc31\uc900][Bronze V] A+B - 3 - 10950", "token": null, "url_slug": "\ubc31\uc900--Bronze-V--A-B---3---10950"}}